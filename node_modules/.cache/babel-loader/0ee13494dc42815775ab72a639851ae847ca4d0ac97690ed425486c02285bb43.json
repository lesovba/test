{"ast":null,"code":"var _jsxFileName = \"/home/artem/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/\\u0414\\u0438\\u043F\\u043B\\u043E\\u043C\\u043D\\u044B\\u0439 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442/my-app/src/components/Options/Options.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport s from './Options.module.css';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Options = props => {\n  _s();\n  let variant = props.shuffleOptions();\n  const addResponse = e => {\n    let textAnswer = e.target.value;\n    let newAnswer = {\n      id: props.state.number,\n      text: textAnswer\n    };\n    props.versionAnswer(newAnswer);\n  };\n  useEffect(() => {\n    if (props.getGo()) {\n      let inputOptions = document.querySelectorAll(\".question-options\");\n      for (let i = 0; i < inputOptions.length; i++) {\n        if (inputOptions[i].checked) {\n          inputOptions[i].checked = '';\n        }\n      }\n    }\n  });\n  let variantMap = variant.item.map((v, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"question-options\",\n      id: 'question_' + index,\n      name: \"question\",\n      type: \"radio\",\n      onChange: addResponse,\n      value: v\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: s.answer,\n      htmlFor: 'question_' + index,\n      children: v\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this));\n  if (props.getGo()) {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: s.answers,\n      children: variantMap\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this);\n  }\n};\n_s(Options, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Options;\nexport default Options;\nvar _c;\n$RefreshReg$(_c, \"Options\");","map":{"version":3,"names":["React","s","useEffect","jsxDEV","_jsxDEV","Options","props","_s","variant","shuffleOptions","addResponse","e","textAnswer","target","value","newAnswer","id","state","number","text","versionAnswer","getGo","inputOptions","document","querySelectorAll","i","length","checked","variantMap","item","map","v","index","children","className","name","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","answer","htmlFor","answers","_c","$RefreshReg$"],"sources":["/home/artem/Рабочий стол/Дипломный проект/my-app/src/components/Options/Options.jsx"],"sourcesContent":["import React from 'react';\nimport s from './Options.module.css';\nimport { useEffect  } from 'react';\n\nconst Options = (props) => {\n\n    let variant = props.shuffleOptions();\n    const addResponse = (e) => {\n        let textAnswer = e.target.value;\n        let newAnswer = {\n            id: props.state.number,\n            text: textAnswer\n        }\n        props.versionAnswer(newAnswer);\n    }\n\n    useEffect( ()  => {\n       if ( props.getGo() ) {\n\n            let inputOptions=document.querySelectorAll(\".question-options\");\n            for (let i =0; i < inputOptions.length; i++) {\n                if (inputOptions[i].checked) {\n                    inputOptions[i].checked = '';\n                }\n            }\n        }\n    })\n\n    let variantMap = variant.item.map((v, index) =>\n        <li key={index}>\n            <input className=\"question-options\"\n                id={'question_' + index}\n                name='question'\n                type=\"radio\"\n                onChange={addResponse}\n                value={v} />\n            <label className={s.answer} htmlFor={'question_' + index}>{v}</label>\n        </li>\n    )\n    if( props.getGo()) {\n        return (\n            <ul className={s.answers}>\n                {variantMap}\n            </ul>\n\n        )\n    } else {\n        return (<div></div>)\n    }\n}\n\nexport default Options;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,CAAC,MAAM,sBAAsB;AACpC,SAASC,SAAS,QAAS,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAEvB,IAAIC,OAAO,GAAGF,KAAK,CAACG,cAAc,CAAC,CAAC;EACpC,MAAMC,WAAW,GAAIC,CAAC,IAAK;IACvB,IAAIC,UAAU,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC/B,IAAIC,SAAS,GAAG;MACZC,EAAE,EAAEV,KAAK,CAACW,KAAK,CAACC,MAAM;MACtBC,IAAI,EAAEP;IACV,CAAC;IACDN,KAAK,CAACc,aAAa,CAACL,SAAS,CAAC;EAClC,CAAC;EAEDb,SAAS,CAAE,MAAO;IACf,IAAKI,KAAK,CAACe,KAAK,CAAC,CAAC,EAAG;MAEhB,IAAIC,YAAY,GAACC,QAAQ,CAACC,gBAAgB,CAAC,mBAAmB,CAAC;MAC/D,KAAK,IAAIC,CAAC,GAAE,CAAC,EAAEA,CAAC,GAAGH,YAAY,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;QACzC,IAAIH,YAAY,CAACG,CAAC,CAAC,CAACE,OAAO,EAAE;UACzBL,YAAY,CAACG,CAAC,CAAC,CAACE,OAAO,GAAG,EAAE;QAChC;MACJ;IACJ;EACJ,CAAC,CAAC;EAEF,IAAIC,UAAU,GAAGpB,OAAO,CAACqB,IAAI,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBACvC5B,OAAA;IAAA6B,QAAA,gBACI7B,OAAA;MAAO8B,SAAS,EAAC,kBAAkB;MAC/BlB,EAAE,EAAE,WAAW,GAAGgB,KAAM;MACxBG,IAAI,EAAC,UAAU;MACfC,IAAI,EAAC,OAAO;MACZC,QAAQ,EAAE3B,WAAY;MACtBI,KAAK,EAAEiB;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChBrC,OAAA;MAAO8B,SAAS,EAAEjC,CAAC,CAACyC,MAAO;MAACC,OAAO,EAAE,WAAW,GAAGX,KAAM;MAAAC,QAAA,EAAEF;IAAC;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,GAPhET,KAAK;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAQV,CACR,CAAC;EACD,IAAInC,KAAK,CAACe,KAAK,CAAC,CAAC,EAAE;IACf,oBACIjB,OAAA;MAAI8B,SAAS,EAAEjC,CAAC,CAAC2C,OAAQ;MAAAX,QAAA,EACpBL;IAAU;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAGb,CAAC,MAAM;IACH,oBAAQrC,OAAA;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC;EACvB;AACJ,CAAC;AAAAlC,EAAA,CA7CKF,OAAO;AAAAwC,EAAA,GAAPxC,OAAO;AA+Cb,eAAeA,OAAO;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}